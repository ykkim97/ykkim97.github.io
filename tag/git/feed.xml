<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://ykkim97.github.io/tag/git/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://ykkim97.github.io/" rel="alternate" type="text/html" />
  <updated>2022-07-25T16:19:41+09:00</updated>
  <id>https://ykkim97.github.io/tag/git/feed.xml</id>

  
  
  

  
    <title type="html">YoungGwon’s IT Tech Blog | </title>
  

  
    <subtitle>IT 기술 블로그입니다.</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">git add , commit, 그리고 staging</title>
      <link href="https://ykkim97.github.io/git-gitaddcommit" rel="alternate" type="text/html" title="git add , commit, 그리고 staging" />
      <published>2022-07-17T03:32:00+09:00</published>
      <updated>2022-07-17T03:32:00+09:00</updated>
      <id>https://ykkim97.github.io/git-gitaddcommit</id>
      <content type="html" xml:base="https://ykkim97.github.io/git-gitaddcommit">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Git은 다음과 같이 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./git-githubissuelabel&quot;&gt;Github Label별 의미&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./git-gitaddcommit&quot;&gt;git add , commit, 그리고 staging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
git은 변경사항을 추적하고 여러 명의 사용자들 간에 파일의 작업을 조율하기 위한 “버전 관리”소프트웨어 입니다.
오늘은 git 명령중에 git add, commit 명령에 대해서 정리해보겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;git-add--commit-그리고-staging&quot;&gt;git add , commit, 그리고 staging&lt;/h2&gt;

&lt;p&gt;작업폴더에 “test.txt”라는 파일을 생성해서 작성했다고 가정해보겠습니다.
이때 “test.txt”파일을 기록하고 싶습니다. 일단, “git add test.txt”라는 명령을 터미널에 입력해주면 됩니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git add test.txt
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;말 그대로 추가하는 겁니다. 그런데, 어디에 추가하는 걸까요? 바로 리포지토리에 추가가 되는 걸까요?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
“git add 파일명”이라는 명령은 일단은 Staging Area라는 곳에 파일을 넣어둡니다. &lt;br /&gt;
Staging Area는 커밋하기전에 커밋할 파일을 골라놓는 곳이고 이런 행위를 스테이징한다고 합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
이제 여기서 커밋명령을 해주어야합니다.
커밋을 해주면 repository에 기록됩니다. 파일 버전을 모아둔다고 말을 합니다.
아 물론, 작업폴더안의 전체 파일을 기록하고싶다면 “git add .”을 입력하면됩니다.&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git add .
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
커밋을 하는 방법은 ‘ git commit -m “쓰고싶은 메세지” ‘를 터미널에 입력해주는 것입니다. 메세지는 현재 커밋하는 내용이 어떤 내용인지 알 수 있게 적어주면됩니다.&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git commit -m &quot;테스트용 파일 추가&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
정리해보면 커밋하기전에 커밋할 파일을 골라놓는 곳인 “Staging Area”에 “git add”를 통해 파일을 넣어주고, 커밋된 파일버전을 모아놓는 곳인 “repository”에 
“git commit”을 통해 커밋합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
End.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>ykkim97</name>
        
        
      </author>

      

      
        <category term="git" />
      

      
        <summary type="html">Git은 다음과 같이 구성되어 있습니다. Github Label별 의미 git add , commit, 그리고 staging</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Github Label별 의미</title>
      <link href="https://ykkim97.github.io/git-githubissuelabel" rel="alternate" type="text/html" title="Github Label별 의미" />
      <published>2022-06-10T07:32:00+09:00</published>
      <updated>2022-06-10T07:32:00+09:00</updated>
      <id>https://ykkim97.github.io/git-githubissuelabel</id>
      <content type="html" xml:base="https://ykkim97.github.io/git-githubissuelabel">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Git은 다음과 같이 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./git-githubissuelabel&quot;&gt;Github Label별 의미&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./git-gitaddcommit&quot;&gt;git add , commit, 그리고 staging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;github-기본-label들&quot;&gt;Github 기본 Label들&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
프로젝트를 하면서 많은 이슈가 발생하게 되고 이런것을 관리하는 것의 필요성을 느끼고 이슈관리에 대해서 공부하던 중 
이슈에 라벨이라는 것을 달 수 있게 되어있었다. 여러가지가 있었는데 다음과 같다.
&lt;br /&gt;
&lt;br /&gt;
깃허브의 이슈, PR(Pull Request)에 Label을 지정할 수 있다. 제공되는 라벨은 다음과 같다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;라벨&lt;/th&gt;
      &lt;th&gt;의미&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;bug&lt;/td&gt;
      &lt;td&gt;예기치 않은 문제 또는 의도하지 않은 동작(버그)을 나타냅니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;documentation&lt;/td&gt;
      &lt;td&gt;문서를 개선하거나 추가 할 필요가 있음을 나타냅니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;duplicate&lt;/td&gt;
      &lt;td&gt;해당이슈 또는 PR이 기존에 있음을 나타냅니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;enhancement&lt;/td&gt;
      &lt;td&gt;새로운 기능 요청을 나타냅니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;good first issue&lt;/td&gt;
      &lt;td&gt;처음 기여해볼 사람에게 좋은 문제를 나타냅니다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;help wanted&lt;/td&gt;
      &lt;td&gt;관리자가 문제 또는 PR 요청에 대한 도움을 원함을 나타냅니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;invalid&lt;/td&gt;
      &lt;td&gt;이슈 또는 PR 요청이 더 이상 관련이 없음을 나타냅니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;question&lt;/td&gt;
      &lt;td&gt;이슈 또는 풀 요청에 추가 정보가 필요함을 나타냅니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;wontfix&lt;/td&gt;
      &lt;td&gt;문제 나 PR 요청에서 작업이 계속되지 않음을 나타냅니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;End.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>ykkim97</name>
        
        
      </author>

      

      
        <category term="git" />
      

      
        <summary type="html">Git은 다음과 같이 구성되어 있습니다. Github Label별 의미 git add , commit, 그리고 staging</summary>
      

      
      
    </entry>
  
</feed>
